{"name": "Переключение вида маршрута обновляет активный таб и пересчитывает время и стоимость", "status": "skipped", "statusDetails": {"message": "XFAIL Время не изменилось: 3 мин → 3 мин\n\n_pytest.outcomes.XFailed: Время не изменилось: 3 мин → 3 мин", "trace": "self = <tests.test_route_selection.TestRouteSelection object at 0x00000155FE204D90>\nmain_page = <pages.main_page.MainPage object at 0x00000155FE1E0210>\nroute_selection = <pages.route_selection_page.RouteSelectionPage object at 0x00000155FE17CD10>\n\n    @allure.title('Переключение вида маршрута обновляет активный таб и пересчитывает время и стоимость')\n    def test_route_mode_switch_updates_active_tab_and_info(self, main_page, route_selection):\n        with allure.step(\"Вводим адреса в поля Откуда и Куда\"):\n            main_page.fill_route()\n        with allure.step(\"Проверяем, что находимся на активной вкладке такси\"):\n            assert route_selection.types.is_active(MoveType.TAXI)\n        with allure.step(\"Получаем данные цены и длительности для маршрута Быстрый\"):\n            price_before = route_selection.info.get_price_value()\n            dur_before   = route_selection.info.get_duration_minutes()\n        with allure.step(\"Переключаемся на тип маршрута Оптимальный\"):\n            route_selection.modes.select(Mode.OPTIMAL)\n        with allure.step(\"Проверяем, что мод авто активен\"):\n            assert route_selection.types.is_active(MoveType.CAR)\n        with allure.step(\"Проверяем, что изменились стоимость и время\"):\n            price_after = route_selection.info.get_price_value()\n            dur_after   = route_selection.info.get_duration_minutes()\n        assert price_after is not None and dur_after is not None\n        assert price_after != price_before\n        if dur_after == dur_before:\n>           pytest.xfail(f\"Время не изменилось: {dur_before} мин → {dur_after} мин\")\nE           _pytest.outcomes.XFailed: Время не изменилось: 3 мин → 3 мин\n\ntests\\test_route_selection.py:47: XFailed"}, "steps": [{"name": "Вводим адреса в поля Откуда и Куда", "status": "passed", "start": 1756993427604, "stop": 1756993427844}, {"name": "Проверяем, что находимся на активной вкладке такси", "status": "passed", "start": 1756993427844, "stop": 1756993428371}, {"name": "Получаем данные цены и длительности для маршрута Быстрый", "status": "passed", "start": 1756993428371, "stop": 1756993428413}, {"name": "Переключаемся на тип маршрута Оптимальный", "status": "passed", "start": 1756993428413, "stop": 1756993428476}, {"name": "Проверяем, что мод авто активен", "status": "passed", "start": 1756993428476, "stop": 1756993429001}, {"name": "Проверяем, что изменились стоимость и время", "status": "passed", "start": 1756993429001, "stop": 1756993429031}], "start": 1756993427604, "stop": 1756993429031, "uuid": "94f7d017-648a-4cf4-b42b-0a29868a96e1", "historyId": "89352208ff80c788c1f6df7dc97c8a8e", "testCaseId": "89352208ff80c788c1f6df7dc97c8a8e", "fullName": "tests.test_route_selection.TestRouteSelection#test_route_mode_switch_updates_active_tab_and_info", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_route_selection"}, {"name": "subSuite", "value": "TestRouteSelection"}, {"name": "host", "value": "DESKTOP-KQIHFAT"}, {"name": "thread", "value": "12896-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_route_selection"}], "titlePath": ["tests", "test_route_selection.py", "TestRouteSelection"]}